package main

import (
	"flag"
	metrics "toloka-metrics/internal/metrics"
	toloka "toloka-metrics/internal/toloka"
	wiki "toloka-metrics/internal/wiki"
)

func main() {
	scrapeWiki := flag.Bool("scrape_wiki", false, "scrape data from wiki articles, that located in config file")
	flag.Parse()

	// parse labeled data from toloka or other source. Then aggregate it and make unique data for each sentence.
	res := toloka.NewResponseData()
	//for k, v := range res {
	//
	//	fmt.Println("resss:key", k)
	//	fmt.Println("value:", v)
	//	fmt.Println(" ")
	//}
	//fmt.Println("len:::", len(res))

	if *scrapeWiki {
		//scrape wiki articles that are in config file
		wiki.ScrapeDataFromWikiArticles()
	}

	// calculate output of python algorithm with snapshotting each step of data
	percentageColoredInEachSentence, mainLabelInEachSentence := metrics.GetColored(res)

	//percentageColoredInEachSentence := []float64{0.9, 1, 0.8181818181818182, 0.9444444444444444, 0.875, 0.8571428571428571, 0.9090909090909091, 1, 0.96, 0.75, 0.9047619047619048, 0.9047619047619048, 0.9545454545454546, 0.8260869565217391, 0.8571428571428571, 0.8421052631578947, 0.875, 0.8571428571428571, 0.9090909090909091, 1, 0.88, 0.8, 0.8333333333333334, 0.7272727272727273, 0.7407407407407407, 0.84375, 0.6756756756756757, 0.9230769230769231, 0.8, 0.8571428571428571, 0.9444444444444444, 0.9047619047619048, 0.84, 0.8421052631578947, 0.9047619047619048, 0.8823529411764706, 0.896551724137931, 0.6923076923076923, 0.8571428571428571, 0.9230769230769231, 0.625, 0.9, 0.8857142857142857, 0.7, 0.8095238095238095, 0.875, 0.8157894736842105, 0.7857142857142857, 0.8888888888888888, 0.8888888888888888, 0.8387096774193549, 0.7777777777777778, 0.8888888888888888, 0.7142857142857143, 0.8666666666666667, 0.88, 0.868421052631579, 0.92, 0.7777777777777778, 1, 0.975, 0.86666667, 0.75, 0.7, 0.8095238095238095, 0.8461538461538461, 0.8076923076923077, 0.8888888888888888, 0.9230769230769231, 0.8333333333333334, 0.8857142857142857, 0.8421052631578947, 0.95, 0.9, 0.9259259259259259, 0.7619047619047619, 0.6666666666666666, 1, 0.8846153846153846, 0.8181818181818182, 0.9117647058823529, 0.875, 0.9130434782608695, 0.8148148148148148, 0.8974358974358975, 0.7368421052631579, 0.75, 0.8484848484848485, 0.9090909090909091, 0.8888888888888888, 0.75, 0.8695652173913043, 0.9375, 0.9375, 0.9411764705882353, 0.8571428571428571, 1, 0.8421052631578947, 0.76, 0.88, 0.8461538461538461, 0.8947368421052632, 0.8918918918918919, 0.7, 0.8214285714285714, 1, 0.8695652173913043, 0.8823529411764706, 0.8695652173913043, 0.9090909090909091, 0.8181818181818182, 0.8636363636363636, 0.7857142857142857, 0.9333333333333333, 0.8888888888888888, 0.8666666666666667, 0.5, 0.9565217391304348, 0.875, 0.7692307692307693, 0.8125, 0.8214285714285714, 0.8846153846153846, 0.8181818181818182, 0.9375, 0.85, 0.9, 0.8333333333333334, 0.875, 0.7727272727272727, 0.9285714285714286, 0.8888888888888888, 0.8, 0.7916666666666666, 0.8636363636363636, 0.85, 0.75, 0.875, 0.7692307692307693, 0.8636363636363636, 0.72, 0.9166666666666666, 0.9310344827586207, 0.8076923076923077, 0.7916666666666666, 0.8421052631578947, 0.8275862068965517, 0.9, 0.9411764705882353, 0.7777777777777778, 0.8484848484848485, 0.9, 0.96153846, 0.9090909090909091, 0.9090909090909091, 0.7272727272727273, 0.8717948717948718, 0.9375, 0.9444444444444444, 0.9142857142857143, 0.8421052631578947, 0.7, 0.8387096774193549, 0.9259259259259259, 0.8205128205128205, 0.8695652173913043, 0.875, 0.875, 0.8095238095238095, 0.9032258064516129, 0.9545454545454546, 0.9230769230769231, 0.8333333333333334, 0.8695652173913043, 0.9, 1, 0.9285714285714286, 0.9629629629629629, 0.8461538461538461, 0.7692307692307693, 0.875, 0.9666666666666667, 0.9166666666666666, 0.9259259259259259, 0.8, 0.8620689655172413, 0.8076923076923077, 0.875, 0.9, 0.9444444444444444, 0.8260869565217391, 0.8571428571428571, 0.9285714285714286, 0.8888888888888888, 0.8461538461538461, 0.875, 0.8055555555555556, 0.7, 0.8709677419354839, 0.8571428571428571, 0.8292682926829268, 0.8, 1, 0.9090909090909091, 0.8571428571428571, 0.7272727272727273, 0.88, 0.86363636, 0.777778, 0.7777777777777778, 0.9583333333333334, 0.7777777777777778, 0.9565217391304348, 0.8780487804878049, 0.9411764705882353, 0.75, 0.8181818181818182, 0.7894736842105263, 0.8888888888888888, 0.85, 0.9130434782608695, 0.8421052631578947, 0.8157894736842105, 0.78571429, 0.74, 0.8888888888888888, 0.9, 1, 0.8518518518518519, 0.9130434782608695, 0.8333333333333334, 0.875, 0.7692307692307693, 1, 0.8333333333333334, 0.9130434782608695, 0.8095238095238095, 0.8214285714285714, 1, 0.9444444444444444, 0.9375, 0.7272727272727273, 0.75, 0.8214285714285714, 0.92, 0.85714, 0.875, 0.9285714285714286, 0.9333333333333333, 1, 0.7857142857142857, 0.8076923076923077, 0.7272727272727273, 0.7857142857142857, 0.8064516129032258, 0.9230769230769231, 0.9, 0.7777777777777778, 0.8275862068965517, 0.8536585365853658, 0.90625, 0.8, 1, 0.5714285714285714, 1, 0.7727272727272727, 0.8571428571428571, 0.88, 0.9130434782608695, 0.7272727272727273, 0.8387096774193549, 0.8235294117647058, 0.9411764705882353, 0.9375, 0.8947368421052632, 0.75, 0.88, 0.9333333333333333, 0.9130434782608695, 0.8260869565217391, 0.8695652173913043, 0.9090909090909091, 0.875, 0.9411764705882353, 0.8888888888888888, 0.8095238095238095, 0.9375, 0.7272727272727273, 0.8125, 0.7619047619047619, 0.8928571428571429, 0.9090909090909091, 0.7727272727272727, 0.8648648648648649, 0.9, 1, 0.9285714285714286, 0.96428571, 0.7777777777777778, 0.9444444444444444, 0.8076923076923077, 0.8518518518518519, 0.875, 0.8571428571428571, 0.8571428571428571, 1, 0.8571428571428571, 0.9, 0.75, 0.875, 0.7692307692307693, 0.8695652173913043, 0.7666666666666667, 0.8333333333333334, 0.9523809523809523, 0.9333333333333333, 0.875, 0.8181818181818182, 0.8888888888888888, 1, 0.7272727272727273, 0.8666666666666667, 0.8571428571428571, 0.875, 0.9230769230769231, 0.8947368421052632, 0.7, 0.9444444444444444, 0.8461538461538461, 0.8636363636363636, 1, 0.875, 0.8571428571428571, 0.7777777777777778, 0.9444444444444444, 0.8636363636363636, 0.86666667, 0.8571428571428571, 0.75, 0.8285714285714286, 0.8333333333333334, 0.8888888888888888, 0.9444444444444444, 0.8636363636363636, 0.7619047619047619, 0.8947368421052632, 0.875, 0.875, 0.7692307692307693, 0.9642857142857143, 0.7037037037037037, 0.7272727272727273, 0.9393939393939394, 0.8611111111111112, 0.9130434782608695, 0.875, 0.8529411764705882, 0.8571428571428571, 0.85, 0.8333333333333334, 0.8333333333333334, 0.8421052631578947, 0.9310344827586207, 0.6153846153846154, 1, 0.9473684210526315, 0.8846153846153846, 1, 0.8333333333333334, 0.782608695652174, 0.85, 0.9130434782608695, 0.875, 0.7692307692307693, 0.8260869565217391, 0.8333333333333334, 0.7142857142857143, 0.9117647058823529, 0.9090909090909091, 0.92, 0.8888888888888888, 0.8888888888888888, 0.9130434782608695, 0.9629629629629629, 0.8125, 0.8571428571428571, 0.8823529411764706, 0.875, 0.8095238095238095, 1, 0.8947368421052632, 0.8260869565217391, 0.9444444444444444, 0.8846153846153846, 0.9111111111111111, 0.6666666666666666, 0.875, 0.8653846153846154, 0.9117647058823529, 0.75, 0.896551724137931, 0.9473684210526315, 0.9411764705882353, 0.9024390243902439, 0.8947368421052632, 0.7, 0.8571428571428571, 0.8636363636363636, 0.8571428571428571, 0.8571428571428571, 0.8461538461538461, 0.7777777777777778, 0.8846153846153846, 0.8181818181818182}
	//mainLabelInEachSentence := []string{"False", "True", "True", "True", "NoData", "True", "True", "True", "True", "True", "True", "False", "True", "True", "True", "True", "NoData", "True", "True", "True", "True", "False", "False", "NoData", "False", "True", "True", "True", "True", "True", "NoData", "True", "True", "True", "False", "False", "True", "NoData", "False", "NoData", "False", "True", "True", "NoData", "True", "True", "True", "True", "True", "True", "True", "False", "False", "NoData", "False", "False", "True", "NoData", "False", "True", "True", "False", "False", "NoData", "True", "True", "True", "True", "False", "True", "True", "True", "True", "False", "True", "False", "NoData", "True", "False", "False", "True", "NoData", "False", "True", "False", "False", "False", "True", "True", "NoData", "True", "True", "True", "True", "True", "True", "True", "True", "False", "True", "True", "True", "True", "NoData", "True", "True", "True", "True", "False", "True", "True", "False", "True", "True", "False", "False", "NoData", "False", "NoData", "False", "False", "False", "False", "False", "True", "True", "False", "NoData", "NoData", "True", "True", "True", "True", "True", "True", "True", "False", "NoData", "False", "False", "True", "False", "False", "False", "False", "False", "False", "False", "True", "True", "True", "True", "True", "True", "True", "True", "True", "False", "True", "False", "True", "NoData", "True", "True", "True", "True", "True", "NoData", "False", "True", "True", "False", "NoData", "NoData", "False", "True", "True", "True", "False", "False", "NoData", "True", "True", "True", "True", "True", "False", "True", "NoData", "True", "False", "True", "True", "True", "False", "False", "True", "NoData", "True", "True", "True", "True", "NoData", "True", "NoData", "NoData", "True", "False", "False", "NoData", "NoData", "NoData", "True", "True", "True", "False", "False", "False", "False", "False", "False", "True", "True", "False", "True", "True", "NoData", "True", "True", "True", "True", "NoData", "False", "True", "False", "False", "False", "True", "True", "True", "True", "NoData", "False", "True", "False", "False", "False", "True", "True", "True", "True", "NoData", "True", "True", "True", "True", "NoData", "True", "True", "True", "NoData", "NoData", "True", "NoData", "False", "True", "False", "True", "False", "True", "True", "False", "True", "True", "True", "True", "True", "True", "True", "True", "True", "NoData", "True", "True", "True", "NoData", "True", "NoData", "NoData", "True", "True", "False", "True", "NoData", "False", "True", "True", "True", "NoData", "True", "True", "True", "NoData", "True", "True", "False", "True", "True", "False", "NoData", "False", "False", "True", "False", "False", "False", "NoData", "True", "True", "True", "True", "True", "NoData", "True", "False", "True", "NoData", "True", "True", "False", "NoData", "NoData", "True", "True", "True", "True", "NoData", "NoData", "False", "True", "True", "True", "False", "True", "True", "True", "True", "NoData", "False", "False", "False", "False", "False", "False", "True", "True", "True", "True", "True", "True", "True", "False", "False", "False", "True", "True", "False", "True", "True", "True", "True", "True", "False", "False", "True", "False", "True", "False", "NoData", "NoData", "NoData", "NoData", "NoData", "NoData", "True", "True", "False", "True", "True", "False", "True", "True", "True", "True", "True", "NoData", "True", "True", "True", "True", "True", "False", "True", "False", "True", "NoData", "True", "True", "True", "NoData", "False", "True", "True", "True"}
	//calculate and prepare AUC data for future ROC curve
	metrics.GetAUC(percentageColoredInEachSentence, mainLabelInEachSentence)

}
